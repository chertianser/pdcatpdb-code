import sys
import numpy as np
import scipy.integrate

OFile = 'microkinetics/ob-3w-tbuxphos/ob-3w-tbuxphos-results.csv'

# Parameters
species = 34
trep = 1000.0 # s
dt = 100.0 # maximum timestep for solving the system
tfin = 1000000.0 # Final Time
xini = np.zeros(species)
xini[29] = 0.02
xini[28] = 0.001
xini[30] = 0.07
# Model at T=333.15 K
def model(t,x):
    dxdt = np.zeros(34)
    
    #Constants
    k00 = 2.4621886739e+10
    k01 = 2.4621886739e+10
    k02 = 1.0395952999e+07
    k03 = 2.4621886739e+10
    k04 = 3.2877009406e+03
    k05 = 3.8335048717e+10
    k06 = 6.4094765688e+09
    k07 = 7.4460461300e-13
    k08 = 5.8826892709e+00
    k09 = 4.2655932530e+04
    k10 = 1.4993424281e-10
    k11 = 3.2015939876e+03
    k12 = 2.4621886739e+10
    k13 = 2.0713785942e-12
    k14 = 3.6827693487e+04
    k15 = 3.4923874552e+04
    k16 = 3.0164689208e+06
    k17 = 1.7786084867e+00
    k18 = 1.4113640970e+00
    k19 = 2.3828527235e-02
    k20 = 6.1422884345e-02
    k21 = 1.4746530842e-01
    k22 = 2.4621886739e+10
    k23 = 1.9168499381e-02
    k24 = 3.1047708399e+08
    k25 = 2.2791199494e+05
    k26 = 4.4081318795e-02
    k27 = 1.2847541611e-03
    k28 = 6.4281965871e-02
    k29 = 1.1739445369e-06
    k30 = 4.6394458464e-09
    k31 = 1.0445977227e-09
    k32 = 8.4756739904e-01
    k33 = 3.7888427330e-03
    k34 = 8.6032529921e+07
    k35 = 1.7924911077e+10
    k36 = 8.6411434087e-06
    k37 = 1.0951721100e-05
    k38 = 2.7291574903e+01
    k39 = 4.8189140034e-02
    k40 = 1.0095547287e-09
    k41 = 1.8406878739e-15
    k42 = 1.1601829717e-08
    k43 = 9.5385007977e-14
    k44 = 1.7410989883e+05
    k45 = 2.4621886739e+10
    k46 = 2.4621886739e+10
    k47 = 1.6122460242e+09
    k48 = 7.6341173138e+07
    k49 = 2.4621886739e+10
    k50 = 2.4621886739e+10
    k51 = 9.4653342102e+04
    k52 = 2.4621886739e+10
    k53 = 1.1986756501e+08
    k54 = 1.8202113996e+09
    k55 = 2.4621886739e+10
    k56 = 3.3786595337e+07
    k57 = 2.4621886739e+10
    k58 = 3.4038575376e+04
    k59 = 2.4621886739e+10
    k60 = 2.4621886739e+10
    k61 = 1.7144388706e+06
    k62 = 2.4621886739e+10
    k63 = 5.5100186638e+07
    k64 = 2.4621886739e+10
    k65 = 4.3877634847e+08
    k66 = 1.5272191369e+06
    k67 = 2.4621886739e+10
    k68 = 1.0962054121e+09
    k69 = 2.4621886739e+10
    k70 = 2.4621886739e+10
    k71 = 1.6929942379e+07
    k72 = 2.4621886739e+10
    k73 = 4.0400652453e+03
    
    #Ratelaws
    r00 = k00*x[28]
    r01 = k01*x[0]*x[0]
    r02 = k02*x[0]*x[29]
    r03 = k03*x[1]
    r04 = k04*x[1]
    r05 = k05*x[2]
    r06 = k06*x[2]
    r07 = k07*x[3]
    r08 = k08*x[3]*x[30]
    r09 = k09*x[4]*x[31]
    r10 = k10*x[4]
    r11 = k11*x[5]
    r12 = k12*x[5]
    r13 = k13*x[0]*x[32]
    r14 = k14*x[1]
    r15 = k15*x[6]
    r16 = k16*x[6]
    r17 = k17*x[7]
    r18 = k18*x[7]*x[30]
    r19 = k19*x[10]*x[31]
    r20 = k20*x[10]
    r21 = k21*x[11]
    r22 = k22*x[11]
    r23 = k23*x[0]*x[33]
    r24 = k24*x[12]
    r25 = k25*x[13]
    r26 = k26*x[15]
    r27 = k27*x[16]
    r28 = k28*x[7]
    r29 = k29*x[16]
    r30 = k30*x[17]
    r31 = k31*x[18]
    r32 = k32*x[19]
    r33 = k33*x[20]
    r34 = k34*x[16]
    r35 = k35*x[21]
    r36 = k36*x[23]
    r37 = k37*x[24]
    r38 = k38*x[25]
    r39 = k39*x[26]
    r40 = k40*x[8]
    r41 = k41*x[9]
    r42 = k42*x[12]
    r43 = k43*x[27]
    r44 = k44*x[7]*x[30]
    r45 = k45*x[8]
    r46 = k46*x[9]
    r47 = k47*x[10]*x[31]
    r48 = k48*x[8]*x[30]
    r49 = k49*x[12]
    r50 = k50*x[13]
    r51 = k51*x[14]*x[30]
    r52 = k52*x[14]
    r53 = k53*x[15]*x[30]
    r54 = k54*x[16]*x[30]
    r55 = k55*x[17]
    r56 = k56*x[18]
    r57 = k57*x[11]*x[31]
    r58 = k58*x[17]*x[30]
    r59 = k59*x[19]
    r60 = k60*x[20]
    r61 = k61*x[18]*x[30]
    r62 = k62*x[21]
    r63 = k63*x[22]*x[33]
    r64 = k64*x[22]*x[30]
    r65 = k65*x[23]
    r66 = k66*x[23]*x[30]
    r67 = k67*x[25]
    r68 = k68*x[24]*x[30]
    r69 = k69*x[26]
    r70 = k70*x[27]
    r71 = k71*x[9]*x[30]
    r72 = k72*x[24]
    r73 = k73*x[0]*x[31]
    
    #MassBalances
    dxdt[0] = +2.0*r00-2.0*r01-r02+r03+r12-r13+r22-r23+r72-r73
    dxdt[1] = +r02-r03-r04+r05-r14+r15
    dxdt[2] = +r04-r05-r06+r07
    dxdt[3] = +r06-r07-r08+r09
    dxdt[4] = +r08-r09-r10+r11
    dxdt[5] = +r10-r11-r12+r13
    dxdt[6] = +r14-r15-r16+r17
    dxdt[7] = +r16-r17-r18+r19-r28+r29-r44+r45
    dxdt[8] = -r40+r41+r44-r45-r48+r49
    dxdt[9] = +r40-r41-r46+r47+r70-r71
    dxdt[10] = +r18-r19-r20+r21+r46-r47
    dxdt[11] = +r20-r21-r22+r23+r56-r57
    dxdt[12] = -r24+r25-r42+r43+r48-r49
    dxdt[13] = +r24-r25-r50+r51
    dxdt[14] = +r50-r51-r52+r53
    dxdt[15] = -r26+r27+r52-r53
    dxdt[16] = +r26-r27+r28-r29-r34+r35-r54+r55
    dxdt[17] = -r30+r31+r54-r55-r58+r59
    dxdt[18] = +r30-r31-r56+r57+r60-r61
    dxdt[19] = -r32+r33+r58-r59
    dxdt[20] = +r32-r33-r60+r61
    dxdt[21] = +r34-r35-r62+r63
    dxdt[22] = +r62-r63-r64+r65
    dxdt[23] = -r36+r37+r64-r65-r66+r67
    dxdt[24] = +r36-r37-r68+r69-r72+r73
    dxdt[25] = -r38+r39+r66-r67
    dxdt[26] = +r38-r39+r68-r69
    dxdt[27] = +r42-r43-r70+r71
    dxdt[28] = -r00+r01
    dxdt[29] = -r02+r03
    dxdt[30] = -r08+r09-r18+r19-r44+r45-r48+r49+r50-r51+r52-r53-r54+r55-r58+r59+r60-r61-r64+r65-r66+r67-r68+r69+r70-r71
    dxdt[31] = +r08-r09+r18-r19+r46-r47+r56-r57+r72-r73
    dxdt[32] = +r12-r13
    dxdt[33] = +r22-r23+r62-r63
    
    return dxdt
    
def jacobian(t,x):
    Jac = np.zeros(shape=(34,34))
    
    #Constants
    k00 = 2.4621886739e+10
    k01 = 2.4621886739e+10
    k02 = 1.0395952999e+07
    k03 = 2.4621886739e+10
    k04 = 3.2877009406e+03
    k05 = 3.8335048717e+10
    k06 = 6.4094765688e+09
    k07 = 7.4460461300e-13
    k08 = 5.8826892709e+00
    k09 = 4.2655932530e+04
    k10 = 1.4993424281e-10
    k11 = 3.2015939876e+03
    k12 = 2.4621886739e+10
    k13 = 2.0713785942e-12
    k14 = 3.6827693487e+04
    k15 = 3.4923874552e+04
    k16 = 3.0164689208e+06
    k17 = 1.7786084867e+00
    k18 = 1.4113640970e+00
    k19 = 2.3828527235e-02
    k20 = 6.1422884345e-02
    k21 = 1.4746530842e-01
    k22 = 2.4621886739e+10
    k23 = 1.9168499381e-02
    k24 = 3.1047708399e+08
    k25 = 2.2791199494e+05
    k26 = 4.4081318795e-02
    k27 = 1.2847541611e-03
    k28 = 6.4281965871e-02
    k29 = 1.1739445369e-06
    k30 = 4.6394458464e-09
    k31 = 1.0445977227e-09
    k32 = 8.4756739904e-01
    k33 = 3.7888427330e-03
    k34 = 8.6032529921e+07
    k35 = 1.7924911077e+10
    k36 = 8.6411434087e-06
    k37 = 1.0951721100e-05
    k38 = 2.7291574903e+01
    k39 = 4.8189140034e-02
    k40 = 1.0095547287e-09
    k41 = 1.8406878739e-15
    k42 = 1.1601829717e-08
    k43 = 9.5385007977e-14
    k44 = 1.7410989883e+05
    k45 = 2.4621886739e+10
    k46 = 2.4621886739e+10
    k47 = 1.6122460242e+09
    k48 = 7.6341173138e+07
    k49 = 2.4621886739e+10
    k50 = 2.4621886739e+10
    k51 = 9.4653342102e+04
    k52 = 2.4621886739e+10
    k53 = 1.1986756501e+08
    k54 = 1.8202113996e+09
    k55 = 2.4621886739e+10
    k56 = 3.3786595337e+07
    k57 = 2.4621886739e+10
    k58 = 3.4038575376e+04
    k59 = 2.4621886739e+10
    k60 = 2.4621886739e+10
    k61 = 1.7144388706e+06
    k62 = 2.4621886739e+10
    k63 = 5.5100186638e+07
    k64 = 2.4621886739e+10
    k65 = 4.3877634847e+08
    k66 = 1.5272191369e+06
    k67 = 2.4621886739e+10
    k68 = 1.0962054121e+09
    k69 = 2.4621886739e+10
    k70 = 2.4621886739e+10
    k71 = 1.6929942379e+07
    k72 = 2.4621886739e+10
    k73 = 4.0400652453e+03
    
    #Non-zero Elements
    Jac[0,0] = -2.0*2.0*k01*x[0]-k02*x[29]-k13*x[32]-k23*x[33]-k73*x[31]
    Jac[0,1] = +k03
    Jac[0,5] = +k12
    Jac[0,11] = +k22
    Jac[0,24] = +k72
    Jac[0,28] = +2.0*k00
    Jac[0,29] = -k02*x[0]
    Jac[0,31] = -k73*x[0]
    Jac[0,32] = -k13*x[0]
    Jac[0,33] = -k23*x[0]
    Jac[1,0] = +k02*x[29]
    Jac[1,1] = -k03-k04-k14
    Jac[1,2] = +k05
    Jac[1,6] = +k15
    Jac[1,29] = +k02*x[0]
    Jac[2,1] = +k04
    Jac[2,2] = -k05-k06
    Jac[2,3] = +k07
    Jac[3,2] = +k06
    Jac[3,3] = -k07-k08*x[30]
    Jac[3,4] = +k09*x[31]
    Jac[3,30] = -k08*x[3]
    Jac[3,31] = +k09*x[4]
    Jac[4,3] = +k08*x[30]
    Jac[4,4] = -k09*x[31]-k10
    Jac[4,5] = +k11
    Jac[4,30] = +k08*x[3]
    Jac[4,31] = -k09*x[4]
    Jac[5,0] = +k13*x[32]
    Jac[5,4] = +k10
    Jac[5,5] = -k11-k12
    Jac[5,32] = +k13*x[0]
    Jac[6,1] = +k14
    Jac[6,6] = -k15-k16
    Jac[6,7] = +k17
    Jac[7,6] = +k16
    Jac[7,7] = -k17-k18*x[30]-k28-k44*x[30]
    Jac[7,8] = +k45
    Jac[7,10] = +k19*x[31]
    Jac[7,16] = +k29
    Jac[7,30] = -k18*x[7]-k44*x[7]
    Jac[7,31] = +k19*x[10]
    Jac[8,7] = +k44*x[30]
    Jac[8,8] = -k40-k45-k48*x[30]
    Jac[8,9] = +k41
    Jac[8,12] = +k49
    Jac[8,30] = +k44*x[7]-k48*x[8]
    Jac[9,8] = +k40
    Jac[9,9] = -k41-k46-k71*x[30]
    Jac[9,10] = +k47*x[31]
    Jac[9,27] = +k70
    Jac[9,30] = -k71*x[9]
    Jac[9,31] = +k47*x[10]
    Jac[10,7] = +k18*x[30]
    Jac[10,9] = +k46
    Jac[10,10] = -k19*x[31]-k20-k47*x[31]
    Jac[10,11] = +k21
    Jac[10,30] = +k18*x[7]
    Jac[10,31] = -k19*x[10]-k47*x[10]
    Jac[11,0] = +k23*x[33]
    Jac[11,10] = +k20
    Jac[11,11] = -k21-k22-k57*x[31]
    Jac[11,18] = +k56
    Jac[11,31] = -k57*x[11]
    Jac[11,33] = +k23*x[0]
    Jac[12,8] = +k48*x[30]
    Jac[12,12] = -k24-k42-k49
    Jac[12,13] = +k25
    Jac[12,27] = +k43
    Jac[12,30] = +k48*x[8]
    Jac[13,12] = +k24
    Jac[13,13] = -k25-k50
    Jac[13,14] = +k51*x[30]
    Jac[13,30] = +k51*x[14]
    Jac[14,13] = +k50
    Jac[14,14] = -k51*x[30]-k52
    Jac[14,15] = +k53*x[30]
    Jac[14,30] = -k51*x[14]+k53*x[15]
    Jac[15,14] = +k52
    Jac[15,15] = -k26-k53*x[30]
    Jac[15,16] = +k27
    Jac[15,30] = -k53*x[15]
    Jac[16,7] = +k28
    Jac[16,15] = +k26
    Jac[16,16] = -k27-k29-k34-k54*x[30]
    Jac[16,17] = +k55
    Jac[16,21] = +k35
    Jac[16,30] = -k54*x[16]
    Jac[17,16] = +k54*x[30]
    Jac[17,17] = -k30-k55-k58*x[30]
    Jac[17,18] = +k31
    Jac[17,19] = +k59
    Jac[17,30] = +k54*x[16]-k58*x[17]
    Jac[18,11] = +k57*x[31]
    Jac[18,17] = +k30
    Jac[18,18] = -k31-k56-k61*x[30]
    Jac[18,20] = +k60
    Jac[18,30] = -k61*x[18]
    Jac[18,31] = +k57*x[11]
    Jac[19,17] = +k58*x[30]
    Jac[19,19] = -k32-k59
    Jac[19,20] = +k33
    Jac[19,30] = +k58*x[17]
    Jac[20,18] = +k61*x[30]
    Jac[20,19] = +k32
    Jac[20,20] = -k33-k60
    Jac[20,30] = +k61*x[18]
    Jac[21,16] = +k34
    Jac[21,21] = -k35-k62
    Jac[21,22] = +k63*x[33]
    Jac[21,33] = +k63*x[22]
    Jac[22,21] = +k62
    Jac[22,22] = -k63*x[33]-k64*x[30]
    Jac[22,23] = +k65
    Jac[22,30] = -k64*x[22]
    Jac[22,33] = -k63*x[22]
    Jac[23,22] = +k64*x[30]
    Jac[23,23] = -k36-k65-k66*x[30]
    Jac[23,24] = +k37
    Jac[23,25] = +k67
    Jac[23,30] = +k64*x[22]-k66*x[23]
    Jac[24,0] = +k73*x[31]
    Jac[24,23] = +k36
    Jac[24,24] = -k37-k68*x[30]-k72
    Jac[24,26] = +k69
    Jac[24,30] = -k68*x[24]
    Jac[24,31] = +k73*x[0]
    Jac[25,23] = +k66*x[30]
    Jac[25,25] = -k38-k67
    Jac[25,26] = +k39
    Jac[25,30] = +k66*x[23]
    Jac[26,24] = +k68*x[30]
    Jac[26,25] = +k38
    Jac[26,26] = -k39-k69
    Jac[26,30] = +k68*x[24]
    Jac[27,9] = +k71*x[30]
    Jac[27,12] = +k42
    Jac[27,27] = -k43-k70
    Jac[27,30] = +k71*x[9]
    Jac[28,0] = +2.0*k01*x[0]
    Jac[28,28] = -k00
    Jac[29,0] = -k02*x[29]
    Jac[29,1] = +k03
    Jac[29,29] = -k02*x[0]
    Jac[30,3] = -k08*x[30]
    Jac[30,4] = +k09*x[31]
    Jac[30,7] = -k18*x[30]-k44*x[30]
    Jac[30,8] = +k45-k48*x[30]
    Jac[30,9] = -k71*x[30]
    Jac[30,10] = +k19*x[31]
    Jac[30,12] = +k49
    Jac[30,13] = +k50
    Jac[30,14] = -k51*x[30]+k52
    Jac[30,15] = -k53*x[30]
    Jac[30,16] = -k54*x[30]
    Jac[30,17] = +k55-k58*x[30]
    Jac[30,18] = -k61*x[30]
    Jac[30,19] = +k59
    Jac[30,20] = +k60
    Jac[30,22] = -k64*x[30]
    Jac[30,23] = +k65-k66*x[30]
    Jac[30,24] = -k68*x[30]
    Jac[30,25] = +k67
    Jac[30,26] = +k69
    Jac[30,27] = +k70
    Jac[30,30] = -k08*x[3]-k18*x[7]-k44*x[7]-k48*x[8]-k51*x[14]-k53*x[15]-k54*x[16]-k58*x[17]-k61*x[18]-k64*x[22]-k66*x[23]-k68*x[24]-k71*x[9]
    Jac[30,31] = +k09*x[4]+k19*x[10]
    Jac[31,0] = -k73*x[31]
    Jac[31,3] = +k08*x[30]
    Jac[31,4] = -k09*x[31]
    Jac[31,7] = +k18*x[30]
    Jac[31,9] = +k46
    Jac[31,10] = -k19*x[31]-k47*x[31]
    Jac[31,11] = -k57*x[31]
    Jac[31,18] = +k56
    Jac[31,24] = +k72
    Jac[31,30] = +k08*x[3]+k18*x[7]
    Jac[31,31] = -k09*x[4]-k19*x[10]-k47*x[10]-k57*x[11]-k73*x[0]
    Jac[32,0] = -k13*x[32]
    Jac[32,5] = +k12
    Jac[32,32] = -k13*x[0]
    Jac[33,0] = -k23*x[33]
    Jac[33,11] = +k22
    Jac[33,21] = +k62
    Jac[33,22] = -k63*x[33]
    Jac[33,33] = -k23*x[0]-k63*x[22]
    
    return Jac
    
t = np.arange(0,tfin,trep)
# Time indexes and Out predefinition
solution = scipy.integrate.solve_ivp(fun=model, jac=jacobian, y0=xini,
                                     t_span=(0,tfin), t_eval=t,
                                     method='LSODA', max_step=min(dt,trep),
                                     rtol=1e-07,atol=1e-12)

if not solution.success:
    print(solution.message)
else:
    print(f"""
          nfev={solution.nfev}
          njev={solution.njev}
          nlu={solution.nlu}
          status={solution.status}
          success={solution.success}
          """)
    x = np.zeros(shape=(len(solution.t),species+1))
    x[:,0] = solution.t
    x[:,1:] = solution.y[:,:].transpose()
    np.savetxt(OFile,x,delimiter='\t')
